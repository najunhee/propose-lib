com.markjmind.propose.JwAnimatorListener -> com.markjmind.propose.JwAnimatorListener:
    boolean isForward -> a
    void onStart(android.animation.Animator) -> onStart
    void onEnd(android.animation.Animator) -> onEnd
    void onReverseStart(android.animation.Animator) -> onReverseStart
    void onReverseEnd(android.animation.Animator) -> onReverseEnd
    16:21:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    24:30:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    33:33:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    36:36:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    39:39:boolean isForward() -> isForward
    42:43:void setForward(boolean) -> a
com.markjmind.propose.JwDefalutAnimation -> com.markjmind.propose.a:
    com.markjmind.propose.JwMotionProguard motion -> a
    32:48:boolean startAnimation(com.markjmind.propose.JwPoint,com.markjmind.propose.JwMotionSet,com.markjmind.propose.JwPoint,com.markjmind.propose.JwMotionSet,long) -> a
    64:69:boolean startAnimation(com.markjmind.propose.JwMotionSet,boolean,com.markjmind.propose.JwMotionSet,boolean,boolean) -> a
    92:104:void startAnimation(com.markjmind.propose.JwMotionSet,boolean,long) -> a
    108:129:void moveAnimation(com.markjmind.propose.JwMotionSet,float,long) -> a
    132:144:void moveDistance(com.markjmind.propose.JwMotionSet,float) -> a
    160:282:boolean startAnimation(com.markjmind.propose.JwPoint,com.markjmind.propose.JwMotionSet,long,com.markjmind.propose.JwPoint,com.markjmind.propose.JwMotionSet,long,long) -> a
    16:16:com.markjmind.propose.JwMotionProguard access$0(com.markjmind.propose.JwDefalutAnimation) -> a
com.markjmind.propose.JwDefalutAnimation$1 -> com.markjmind.propose.a$1:
    com.markjmind.propose.JwDefalutAnimation this$0 -> a
    168:171:void onAnimationUpdate(long,java.util.HashMap) -> onAnimationUpdate
com.markjmind.propose.JwDefalutAnimation$2 -> com.markjmind.propose.a$2:
    com.markjmind.propose.JwDefalutAnimation this$0 -> a
    216:219:void onAnimationUpdate(long,java.util.HashMap) -> onAnimationUpdate
com.markjmind.propose.JwDefalutAnimation$TimeAnimationEvent -> com.markjmind.propose.a$a:
    com.markjmind.propose.JwDefalutAnimation this$0 -> a
    288:288:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    291:294:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    297:297:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    300:300:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.markjmind.propose.JwMotion -> com.markjmind.propose.JwMotion:
    int NONE -> NONE
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int UP -> UP
    int DOWN -> DOWN
    int HORIZONTAL -> HORIZONTAL
    int VERTICALITY -> VERTICALITY
    float density -> density
    com.markjmind.propose.JwMotionProguard motion -> a
    com.markjmind.propose.JwMotionSet motionRight -> motionRight
    com.markjmind.propose.JwMotionSet motionLeft -> motionLeft
    com.markjmind.propose.JwMotionSet motionUp -> motionUp
    com.markjmind.propose.JwMotionSet motionDown -> motionDown
    android.view.GestureDetector gestureDetector -> b
    55:59:android.view.GestureDetector getGestureDetector() -> getGestureDetector
    69:70:void setOnMotionListener(com.markjmind.propose.JwMotionListener) -> setOnMotionListener
    77:77:com.markjmind.propose.JwMotionListener getOnMotionListener() -> getOnMotionListener
    85:118:android.view.View$OnTouchListener getOnTouchListener() -> getOnTouchListener
    127:127:boolean startMoveTapUp() -> startMoveTapUp
    135:135:boolean startSingleTapUp() -> a
    140:140:float getFlingMaxAccelerator() -> getFlingMaxAccelerator
    143:144:void setFlingMaxAccelerator(float) -> setFlingMaxAccelerator
    146:146:float getFlingMinAccelerator() -> getFlingMinAccelerator
    149:150:void setFlingMinAccelerator(float) -> setFlingMinAccelerator
    162:162:com.markjmind.propose.JwMotion setMotionDistanceAll(int) -> setMotionDistanceAll
    174:175:com.markjmind.propose.JwMotion setMotionDistanceAll(int,int,int,int) -> setMotionDistanceAll
    184:184:float getDensity(android.content.Context) -> getDensity
    192:193:void enableMotion(boolean) -> enableMotion
    199:199:boolean isEnabelMotoin() -> isEnabelMotoin
    207:207:int getWindowWidth() -> getWindowWidth
    214:214:int getWindowHeight() -> getWindowHeight
    32:32:com.markjmind.propose.JwMotionProguard access$0(com.markjmind.propose.JwMotion) -> a
com.markjmind.propose.JwMotion$1 -> com.markjmind.propose.JwMotion$1:
    com.markjmind.propose.JwMotion this$0 -> a
    88:115:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.markjmind.propose.JwMotion$ACTION -> com.markjmind.propose.JwMotion$ACTION:
    com.markjmind.propose.JwMotion$ACTION stop -> stop
    com.markjmind.propose.JwMotion$ACTION scroll -> scroll
    com.markjmind.propose.JwMotion$ACTION fling -> fling
    com.markjmind.propose.JwMotion$ACTION animation -> animation
    com.markjmind.propose.JwMotion$ACTION[] ENUM$VALUES -> a
    1:1:com.markjmind.propose.JwMotion$ACTION[] values() -> values
    1:1:com.markjmind.propose.JwMotion$ACTION valueOf(java.lang.String) -> valueOf
com.markjmind.propose.JwMotion$DURATION -> com.markjmind.propose.JwMotion$DURATION:
    com.markjmind.propose.JwMotion$DURATION distance -> distance
    com.markjmind.propose.JwMotion$DURATION duration -> duration
    com.markjmind.propose.JwMotion$DURATION[] ENUM$VALUES -> a
    1:1:com.markjmind.propose.JwMotion$DURATION[] values() -> values
    1:1:com.markjmind.propose.JwMotion$DURATION valueOf(java.lang.String) -> valueOf
com.markjmind.propose.JwMotionAdapter -> com.markjmind.propose.b:
    long joinDuration -> a
    long delayDuration -> b
    long startDuration -> c
    long endDuration -> d
    long playDuration -> e
    int direction -> h
    android.animation.ValueAnimator anim -> i
    android.view.View tagerView -> j
    long currDuration -> k
    boolean isStart -> f
    boolean isEnd -> g
    int forwardReady -> l
    int forwardStart -> m
    int reverseReady -> n
    int reverseStart -> o
    int eventStatus -> p
    53:114:boolean scroll(int,com.markjmind.propose.JwMotionSet) -> a
    118:164:boolean sscroll(int,com.markjmind.propose.JwMotionSet) -> b
    168:193:void onEvent(int,boolean,boolean) -> a
    196:197:void startEvent(int,boolean) -> a
    199:200:void endEvent(int,boolean) -> b
    203:203:long getCurrDuration() -> a
    207:207:android.view.View getTargetView() -> b
    211:211:int getDirection() -> c
    215:215:long getEndDuration() -> d
com.markjmind.propose.JwMotionListener -> com.markjmind.propose.JwMotionListener:
    void onStart() -> onStart
    void onScroll(int,long,long) -> onScroll
    void onEnd() -> onEnd
com.markjmind.propose.JwMotionProguard -> com.markjmind.propose.c:
    com.markjmind.propose.JwMotion$ACTION currAction -> a
    com.markjmind.propose.JwMotionSet motionRight -> b
    com.markjmind.propose.JwMotionSet motionLeft -> c
    com.markjmind.propose.JwMotionSet motionUp -> d
    com.markjmind.propose.JwMotionSet motionDown -> e
    com.markjmind.propose.JwDefalutAnimation anim -> q
    android.content.Context context -> f
    float density -> g
    int windowWidth -> h
    int windowHeight -> i
    com.markjmind.propose.JwPoint currX -> j
    com.markjmind.propose.JwPoint currY -> k
    boolean isFirstTouch -> r
    com.markjmind.propose.JwMotionListener motionListener -> l
    int accumBuffDp -> s
    float maxFlingAcc -> m
    float minFlingAcc -> n
    boolean enableMotion -> o
    boolean isMotionStart -> p
    60:78:void init() -> g
    86:95:com.markjmind.propose.JwMotionSet getDirectMotionSet(int) -> a
    105:118:com.markjmind.propose.JwMotionSet getDirectMotionSet(int,int) -> a
    127:130:boolean onDown(android.view.MotionEvent) -> onDown
    134:150:boolean onUp(android.view.MotionEvent) -> a
    155:165:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    173:193:boolean startMoveTapUp() -> a
    201:244:boolean startSingleTapUp() -> b
    248:253:boolean getDirectionForward(int) -> c
    257:272:boolean getGravityForward(com.markjmind.propose.JwMotionSet) -> a
    281:286:com.markjmind.propose.JwPoint getDirectionPoint(int) -> b
    292:292:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    297:297:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    302:302:boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    307:309:void onShowPress(android.view.MotionEvent) -> onShowPress
    313:314:void onLongPress(android.view.MotionEvent) -> onLongPress
    319:337:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    341:357:void accumOnScroll(com.markjmind.propose.JwMotionSet,com.markjmind.propose.JwMotionSet,com.markjmind.propose.JwPoint,float) -> a
    361:397:void drag(com.markjmind.propose.JwPoint,float) -> a
    400:402:void moveDistance(com.markjmind.propose.JwMotionSet,float) -> a
    405:407:void moveDistance(com.markjmind.propose.JwPoint,com.markjmind.propose.JwMotionSet,float) -> a
    410:412:void moveDuration(com.markjmind.propose.JwPoint,com.markjmind.propose.JwMotionSet,long) -> a
    414:416:void moveDuration(com.markjmind.propose.JwMotionSet,long) -> a
    429:455:void move(com.markjmind.propose.JwPoint,com.markjmind.propose.JwMotionSet,float,long) -> a
    467:498:void scanSwitchDirection(com.markjmind.propose.JwMotionSet) -> b
    505:527:void adapterScroll(com.markjmind.propose.JwMotionSet) -> c
    536:554:boolean setupReady(com.markjmind.propose.JwMotionSet) -> d
    566:588:boolean setupEnd(com.markjmind.propose.JwMotionSet) -> e
    598:628:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    632:632:float getFlingMaxAccelerator() -> c
    635:635:float getFlingMinAccelerator() -> d
    646:650:void startMotionEvent() -> e
    653:662:void endMotionEvent() -> f
    664:669:void resetStatusReverse(com.markjmind.propose.JwMotionSet) -> f
    681:685:void setMotionDistanceAll(int,int,int,int) -> a
com.markjmind.propose.JwMotionSet -> com.markjmind.propose.JwMotionSet:
    com.markjmind.propose.JwMotionSet$STATUS status -> a
    java.util.ArrayList adapterList -> b
    com.markjmind.propose.MotionBuilder builder -> c
    com.markjmind.propose.JwDefalutAnimation anim -> i
    int direction -> d
    int orientation -> e
    long currDuration -> j
    long totalDuration -> f
    boolean isOver -> g
    float motionDistance -> h
    float currDistance -> k
    boolean isForward -> l
    boolean reverse -> m
    boolean enableMoveTabUp -> n
    boolean enableSingleTabUp -> o
    boolean enableFling -> p
    boolean enableMove -> q
    boolean enableDuration -> r
    float forwardGravity -> s
    float reverseGravity -> t
    74:77:com.markjmind.propose.MotionBuilder play(android.view.View,android.animation.ValueAnimator,int) -> play
    87:87:com.markjmind.propose.MotionBuilder play(android.animation.ObjectAnimator,int) -> play
    95:97:com.markjmind.propose.MotionBuilder play(android.animation.ObjectAnimator) -> play
    103:106:long getDurationScale(float) -> getDurationScale
    110:113:float getDurationToDistance(long) -> getDurationToDistance
    122:123:com.markjmind.propose.JwMotionSet setMotionDistance(float) -> setMotionDistance
    127:127:float getMotionDistance() -> getMotionDistance
    131:132:void setCurrDistance(float) -> a
    134:134:float getCurrDistance() -> getCurrDistance
    138:139:void setCurrDuration(long) -> a
    142:142:long getCurrDuration() -> getCurrDuration
    146:156:java.lang.String toString() -> toString
    161:164:boolean hasAnimation() -> hasAnimation
    169:171:void setStatus(com.markjmind.propose.JwMotionSet$STATUS) -> a
    173:173:com.markjmind.propose.JwMotionSet$STATUS getStatus() -> getStatus
    177:178:com.markjmind.propose.JwMotionSet setTabUpGravity(float) -> setTabUpGravity
    181:186:com.markjmind.propose.JwMotionSet setTabUpGravity(float,boolean) -> setTabUpGravity
    190:190:float getTabUpGravity() -> getTabUpGravity
    193:196:float getTabUpGravity(boolean) -> getTabUpGravity
    201:201:boolean isForward() -> a
    205:206:void setForward(boolean) -> a
    209:210:void setReverse(boolean) -> b
    213:213:boolean isReverse() -> isReverse
    219:220:void startAnimation(long) -> startAnimation
    222:223:void startAnimation() -> startAnimation
    225:226:void reverseAnimation(long) -> reverseAnimation
    228:229:void reverseAnimation() -> reverseAnimation
    231:232:void moveAnimation(float,long) -> moveAnimation
    234:235:void moveAnimation(float) -> moveAnimation
    237:238:void move(float) -> move
    240:241:void moveEnd() -> moveEnd
    243:244:void moveStart() -> moveStart
    253:254:com.markjmind.propose.JwMotionSet enableTabUp(boolean) -> enableTabUp
    262:262:boolean isEnableTabUp() -> isEnableTabUp
    271:272:com.markjmind.propose.JwMotionSet enableSingleTabUp(boolean) -> enableSingleTabUp
    280:280:boolean isEnableSingleTabUp() -> isEnableSingleTabUp
    288:288:boolean isEnableFling() -> isEnableFling
    297:298:com.markjmind.propose.JwMotionSet enableFling(boolean) -> enableFling
    306:306:boolean isEnableMove() -> isEnableMove
    315:316:com.markjmind.propose.JwMotionSet enableMove(boolean) -> enableMove
    324:324:boolean isEnableDuration() -> isEnableDuration
    333:334:com.markjmind.propose.JwMotionSet enableDuration(boolean) -> enableDuration
com.markjmind.propose.JwMotionSet$STATUS -> com.markjmind.propose.JwMotionSet$STATUS:
    com.markjmind.propose.JwMotionSet$STATUS ready -> ready
    com.markjmind.propose.JwMotionSet$STATUS run -> run
    com.markjmind.propose.JwMotionSet$STATUS end -> end
    com.markjmind.propose.JwMotionSet$STATUS[] ENUM$VALUES -> a
    1:1:com.markjmind.propose.JwMotionSet$STATUS[] values() -> values
    1:1:com.markjmind.propose.JwMotionSet$STATUS valueOf(java.lang.String) -> valueOf
com.markjmind.propose.JwPoint -> com.markjmind.propose.d:
    float point -> b
    long date -> c
    int direction -> d
    float acc -> e
    boolean forward -> f
    int orientation -> g
    float prePoint -> h
    float diffPoint -> i
    float accumPoint -> j
    float frame -> k
    float density -> l
    boolean isTouchUp -> a
    41:41:float getPoint() -> a
    44:60:void setPoint(float) -> a
    62:62:float getPrePoint() -> b
    65:66:void setPrePoint(float) -> b
    68:68:float getDiffPoint() -> c
    71:72:void setDiffPoint(float) -> c
    74:74:float getAccumPoint() -> d
    77:78:void setAccumPoint(float) -> d
    80:87:void addAccumPoint(float) -> e
    90:90:long getDate() -> e
    93:94:void setDate(long) -> a
    96:99:int getAccDirection() -> f
    103:103:int getDirection() -> g
    106:107:void setDirection(int) -> a
    109:109:float getAcc() -> h
    112:113:void setAcc(float) -> f
    115:116:void setAcc() -> i
    118:118:boolean isForward() -> j
    121:127:boolean isForwardToDirection(boolean) -> a
    133:134:void setForward(boolean) -> b
    136:136:boolean isReverse() -> k
    140:141:void setReverse(boolean) -> c
    144:144:int getOrientation() -> l
    147:154:void setOrientation(int) -> b
    158:158:float getFrame() -> m
    161:162:void setFrame(float) -> g
com.markjmind.propose.MotionBuilder -> com.markjmind.propose.MotionBuilder:
    com.markjmind.propose.JwMotionSet set -> a
    com.markjmind.propose.JwMotionAdapter currAdapter -> b
    32:39:com.markjmind.propose.MotionBuilder with(android.view.View,android.animation.ValueAnimator) -> with
    42:43:com.markjmind.propose.MotionBuilder with(android.animation.ObjectAnimator) -> with
    47:52:com.markjmind.propose.MotionBuilder next(android.view.View,android.animation.ValueAnimator) -> next
    56:57:com.markjmind.propose.MotionBuilder next(android.animation.ObjectAnimator) -> next
    62:62:int compare(com.markjmind.propose.JwMotionAdapter,com.markjmind.propose.JwMotionAdapter) -> compare
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
com.markjmind.propose.animator.JwTimerAnimator -> com.markjmind.propose.animator.JwTimerAnimator:
    java.util.ArrayList valueList -> a
    boolean isInitListener -> b
    android.animation.ValueAnimator anim -> c
    android.animation.Animator$AnimatorListener animationListener -> d
    25:41:void initListener() -> a
    44:47:void addTimerValue(com.markjmind.propose.animator.TimerValue) -> addTimerValue
    51:55:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
    58:74:void start() -> start
    77:78:void setDuration(long) -> setDuration
    81:82:void setAnimatorListener(android.animation.Animator$AnimatorListener) -> setAnimatorListener
    86:89:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    93:96:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    100:103:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    107:110:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.markjmind.propose.animator.JwTimerAnimator$1 -> com.markjmind.propose.animator.JwTimerAnimator$1:
    com.markjmind.propose.animator.JwTimerAnimator this$0 -> a
    28:32:java.util.ArrayList evaluate(float,java.util.ArrayList,java.util.ArrayList) -> a
    1:1:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.markjmind.propose.animator.TimerValue -> com.markjmind.propose.animator.TimerValue:
    long start -> b
    long end -> c
    boolean forward -> d
    java.util.HashMap params -> e
    int index -> index
    android.animation.Animator$AnimatorListener animationListener -> a
    int direction -> f
    void onAnimationUpdate(long,java.util.HashMap) -> onAnimationUpdate
    26:27:com.markjmind.propose.animator.TimerValue addParam(java.lang.String,java.lang.Object) -> addParam
    30:32:com.markjmind.propose.animator.TimerValue setValues(long,long) -> setValues
    35:36:com.markjmind.propose.animator.TimerValue setForward(boolean) -> setForward
    41:43:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
    46:48:com.markjmind.propose.animator.TimerValue setAnimatorListener(android.animation.Animator$AnimatorListener,int) -> setAnimatorListener
    54:57:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    61:64:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    68:71:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    75:78:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    81:81:int getDirection() -> getDirection
    85:86:void setDirection(int) -> setDirection
com.markjmind.propose.gesture.JwFlingMotion -> com.markjmind.propose.gesture.a:
    android.view.View view -> a
    com.markjmind.propose.gesture.JwGesture$DIRECTION action -> b
    boolean result -> c
    float flingSensing -> d
    int[] $SWITCH_TABLE$com$markjmind$propose$gesture$JwGesture$DIRECTION -> e
    21:46:boolean fling(float,float,float,float) -> fling
    50:51:com.markjmind.propose.gesture.JwFlingMotion setResult(boolean) -> a
    55:56:com.markjmind.propose.gesture.JwFlingMotion setMoveAction(com.markjmind.propose.gesture.JwGesture$DIRECTION) -> a
    60:69:void allFling(float,float,float,float) -> a
    72:75:void horizontalFling(float,float) -> a
    77:80:void leftFling(float,float) -> b
    82:85:void rightFling(float,float) -> c
    87:90:void verticalityFling(float,float) -> d
    92:95:void topFling(float,float) -> e
    97:100:void bottomFling(float,float) -> f
    8:8:int[] $SWITCH_TABLE$com$markjmind$propose$gesture$JwGesture$DIRECTION() -> a
com.markjmind.propose.gesture.JwGesture -> com.markjmind.propose.gesture.JwGesture:
    android.view.View view -> a
    android.view.GestureDetector gestureDetector -> b
    com.markjmind.propose.gesture.JwGesture$ACTION currAction -> c
    com.markjmind.propose.gesture.JwGesture$ScrollMotionListener scrollMotionListener -> d
    boolean isFirstMove -> e
    float tempRawX -> f
    float tempRawY -> g
    com.markjmind.propose.gesture.JwGesture$FlingMotionListener flingMotionListener -> h
    com.markjmind.propose.gesture.MotionSize size -> i
    int[] $SWITCH_TABLE$com$markjmind$propose$gesture$JwGesture$ACTION -> j
    61:70:void init() -> d
    73:74:com.markjmind.propose.gesture.JwGesture setSize(com.markjmind.propose.gesture.MotionSize) -> a
    77:78:com.markjmind.propose.gesture.JwGesture setSize(float,float,float,float) -> a
    82:83:com.markjmind.propose.gesture.JwGesture setScrollMotionListener(com.markjmind.propose.gesture.JwGesture$ScrollMotionListener) -> a
    86:87:com.markjmind.propose.gesture.JwGesture setFlingMotionListener(com.markjmind.propose.gesture.JwGesture$FlingMotionListener) -> a
    92:96:android.view.GestureDetector getGestureDetector() -> a
    100:131:android.view.View$OnTouchListener getOnTouchListener() -> b
    134:147:void endingMotion() -> e
    153:154:boolean onDown(android.view.MotionEvent) -> onDown
    159:159:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    164:164:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    169:169:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    174:174:boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    179:180:void onShowPress(android.view.MotionEvent) -> onShowPress
    184:185:void onLongPress(android.view.MotionEvent) -> onLongPress
    189:202:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    207:213:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    39:39:com.markjmind.propose.gesture.MotionSize access$0(com.markjmind.propose.gesture.JwGesture) -> a
    25:25:android.view.View access$1(com.markjmind.propose.gesture.JwGesture) -> b
    133:133:void access$2(com.markjmind.propose.gesture.JwGesture) -> c
    30:30:void access$3(com.markjmind.propose.gesture.JwGesture,com.markjmind.propose.gesture.JwGesture$ACTION) -> a
    12:12:int[] $SWITCH_TABLE$com$markjmind$propose$gesture$JwGesture$ACTION() -> c
com.markjmind.propose.gesture.JwGesture$1 -> com.markjmind.propose.gesture.JwGesture$1:
    com.markjmind.propose.gesture.JwGesture this$0 -> a
    64:68:void run() -> run
com.markjmind.propose.gesture.JwGesture$2 -> com.markjmind.propose.gesture.JwGesture$2:
    com.markjmind.propose.gesture.JwGesture this$0 -> a
    103:128:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.markjmind.propose.gesture.JwGesture$ACTION -> com.markjmind.propose.gesture.JwGesture$ACTION:
    com.markjmind.propose.gesture.JwGesture$ACTION NONE -> NONE
    com.markjmind.propose.gesture.JwGesture$ACTION SCROLL -> SCROLL
    com.markjmind.propose.gesture.JwGesture$ACTION FLING -> FLING
    com.markjmind.propose.gesture.JwGesture$ACTION[] ENUM$VALUES -> a
    1:1:com.markjmind.propose.gesture.JwGesture$ACTION[] values() -> values
    1:1:com.markjmind.propose.gesture.JwGesture$ACTION valueOf(java.lang.String) -> valueOf
com.markjmind.propose.gesture.JwGesture$DIRECTION -> com.markjmind.propose.gesture.JwGesture$DIRECTION:
    com.markjmind.propose.gesture.JwGesture$DIRECTION NONE -> NONE
    com.markjmind.propose.gesture.JwGesture$DIRECTION ALL -> ALL
    com.markjmind.propose.gesture.JwGesture$DIRECTION LEFT -> LEFT
    com.markjmind.propose.gesture.JwGesture$DIRECTION RIGHT -> RIGHT
    com.markjmind.propose.gesture.JwGesture$DIRECTION TOP -> TOP
    com.markjmind.propose.gesture.JwGesture$DIRECTION BOTTOM -> BOTTOM
    com.markjmind.propose.gesture.JwGesture$DIRECTION HORIZONTAL -> HORIZONTAL
    com.markjmind.propose.gesture.JwGesture$DIRECTION VERTICALITY -> VERTICALITY
    com.markjmind.propose.gesture.JwGesture$DIRECTION[] ENUM$VALUES -> a
    1:1:com.markjmind.propose.gesture.JwGesture$DIRECTION[] values() -> values
    1:1:com.markjmind.propose.gesture.JwGesture$DIRECTION valueOf(java.lang.String) -> valueOf
com.markjmind.propose.gesture.JwGesture$FlingMotionListener -> com.markjmind.propose.gesture.JwGesture$FlingMotionListener:
    boolean fling(float,float,float,float) -> fling
com.markjmind.propose.gesture.JwGesture$ScrollMotionListener -> com.markjmind.propose.gesture.JwGesture$ScrollMotionListener:
    void startScroll(android.view.View,com.markjmind.propose.gesture.MotionSize) -> startScroll
    boolean scroll(android.view.View,float,float,com.markjmind.propose.gesture.MotionSize) -> scroll
    void endScroll(android.view.View,com.markjmind.propose.gesture.MotionSize) -> endScroll
com.markjmind.propose.gesture.JwGesture$TAGET -> com.markjmind.propose.gesture.JwGesture$TAGET:
    com.markjmind.propose.gesture.JwGesture$TAGET SELF -> SELF
    com.markjmind.propose.gesture.JwGesture$TAGET PARENTS -> PARENTS
    com.markjmind.propose.gesture.JwGesture$TAGET[] ENUM$VALUES -> a
    1:1:com.markjmind.propose.gesture.JwGesture$TAGET[] values() -> values
    1:1:com.markjmind.propose.gesture.JwGesture$TAGET valueOf(java.lang.String) -> valueOf
com.markjmind.propose.gesture.JwMoveGesture -> com.markjmind.propose.gesture.b:
    com.markjmind.propose.gesture.JwGesture$DIRECTION action -> a
    boolean result -> b
    com.markjmind.propose.gesture.JwGesture$DIRECTION magnet -> c
    android.animation.ObjectAnimator moveAnimX -> d
    android.animation.ObjectAnimator moveAnimY -> e
    android.animation.TimeInterpolator interpolator -> f
    int[] $SWITCH_TABLE$com$markjmind$propose$gesture$JwGesture$DIRECTION -> g
    28:31:void init() -> b
    36:36:void startScroll(android.view.View,com.markjmind.propose.gesture.MotionSize) -> startScroll
    39:69:boolean scroll(android.view.View,float,float,com.markjmind.propose.gesture.MotionSize) -> scroll
    74:75:void endScroll(android.view.View,com.markjmind.propose.gesture.MotionSize) -> endScroll
    78:79:com.markjmind.propose.gesture.JwMoveGesture setResult(boolean) -> a
    83:84:com.markjmind.propose.gesture.JwMoveGesture setMoveAction(com.markjmind.propose.gesture.JwGesture$DIRECTION) -> a
    88:98:com.markjmind.propose.gesture.JwMoveGesture setMoveX(android.view.View,float,com.markjmind.propose.gesture.MotionSize) -> a
    101:111:com.markjmind.propose.gesture.JwMoveGesture setMoveY(android.view.View,float,com.markjmind.propose.gesture.MotionSize) -> b
    121:122:com.markjmind.propose.gesture.JwMoveGesture setMagnet(com.markjmind.propose.gesture.JwGesture$DIRECTION) -> b
    126:177:void magnet(android.view.View,int,com.markjmind.propose.gesture.MotionSize) -> a
    15:15:int[] $SWITCH_TABLE$com$markjmind$propose$gesture$JwGesture$DIRECTION() -> a
com.markjmind.propose.gesture.MotionSize -> com.markjmind.propose.gesture.c:
    float minX -> a
    float maxX -> b
    float minY -> c
    float maxY -> d
    17:17:float getMinX() -> a
    21:22:void setMinX(float) -> a
    25:25:float getMaxX() -> b
    29:30:void setMaxX(float) -> b
    33:33:float getMinY() -> c
    37:38:void setMinY(float) -> c
    41:41:float getMaxY() -> d
    45:46:void setMaxY(float) -> d
